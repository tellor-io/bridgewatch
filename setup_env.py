#!/usr/bin/env python3
"""
Setup script for Bridge Data Collector environment

This script helps users set up their .env file interactively.
"""

import os
import sys
from pathlib import Path

def main():
    print("üöÄ Bridge Data Collector Environment Setup")
    print("=" * 50)
    
    env_file = Path(".env")
    env_example = Path(".env.example")
    
    # Check if .env already exists
    if env_file.exists():
        response = input("‚ö†Ô∏è  .env file already exists. Overwrite? (y/N): ")
        if response.lower() != 'y':
            print("Setup cancelled.")
            return
    
    # Check if .env.example exists
    if not env_example.exists():
        print("‚ùå .env.example file not found!")
        print("Please make sure you're running this from the bridge-data-collector directory.")
        return
    
    print("\nüìù Let's set up your configuration...")
    print("(Press Enter to use default values shown in brackets)")
    
    # Get EVM RPC URL (required)
    print("\nüîó EVM RPC URL (Required)")
    print("This should include your API key from Infura, Alchemy, or other provider.")
    print("Examples:")
    print("  - https://sepolia.infura.io/v3/YOUR_API_KEY")
    print("  - https://eth-sepolia.g.alchemy.com/v2/YOUR_API_KEY")
    print("  - http://localhost:8545 (for local node)")
    
    evm_rpc = input("EVM_RPC_URL: ").strip()
    while not evm_rpc:
        print("‚ùå EVM RPC URL is required!")
        evm_rpc = input("EVM_RPC_URL: ").strip()
    
    # Get Layer RPC URL
    layer_rpc = input("LAYER_RPC_URL [https://node-palmito.tellorlayer.com]: ").strip()
    if not layer_rpc:
        layer_rpc = "https://node-palmito.tellorlayer.com"
    
    # Get Chain ID
    chain_id = input("CHAIN_ID [layertest-4]: ").strip()
    if not chain_id:
        chain_id = "layertest-4"
    
    # Get Bridge Address
    bridge_address = input("BRIDGE_ADDRESS [0xC69f43741D379cE93bdaAC9b5135EA3e697df1F8]: ").strip()
    if not bridge_address:
        bridge_address = "0xC69f43741D379cE93bdaAC9b5135EA3e697df1F8"
    
    # Write .env file
    env_content = f"""# Bridge Data Collector Environment Variables
# Generated by setup_env.py

# EVM RPC URL (contains API key - keep secret!)
EVM_RPC_URL={evm_rpc}

# Layer blockchain RPC URL  
LAYER_RPC_URL={layer_rpc}

# Chain ID for Layer network
CHAIN_ID={chain_id}

# Bridge contract address
BRIDGE_ADDRESS={bridge_address}
"""
    
    try:
        with open(env_file, 'w') as f:
            f.write(env_content)
        
        print("\n‚úÖ Environment file created successfully!")
        print(f"üìÅ Created: {env_file.absolute()}")
        
        print("\nüîí Security Note:")
        print("Your .env file contains API keys and is already added to .gitignore")
        print("Never commit this file to version control!")
        
        print("\nüöÄ Next Steps:")
        print("1. Test your setup: ./bridgewatch status")
        print("2. Start monitoring: ./bridgewatch start")
        
    except Exception as e:
        print(f"‚ùå Error creating .env file: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main() 